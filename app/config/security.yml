jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
     #   PB\InicioBundle\Entity\Usuario: plaintext
            #algorithm: sha512
            #encode-as-base64: true
            #iterations: 10

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
         user_db:
            entity: { class: PB\InicioBundle\Entity\Usuario, property: usuario }
         in_memory:
             memory:
                 users:
                     admin: { password: deivid39, roles: 'ROLE_ADMIN' }
                     david: { password: deivid39, roles: 'ROLE_USER' }
                     luis:  { password: 925461, roles: 'ROLE_USER' }
                     clara: { password: 17dic84, roles: 'ROLE_USER' }
                     paquita: { password: 15896, roles: 'ROLE_USER' }
                     marijose: { password: 28081, roles: 'ROLE_USER' }
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            provider: in_memory
            form_login:
                login_path: /login # el usuario es redirigido aqu√≠ cuando necesita ingresar
                check_path: /login_check
                remember_me: true
                # login success redirecting options (read further below)
                always_use_default_target_path: false
                default_target_path:            /inicio
                target_path_parameter:          _target_path
                use_referer:                    false
            logout:
                path: /logout
                target: /
            remember_me:
                key: MiClaveSegura
                lifetime: 1800
                path: /.*
                domain: ~
            security: true
            anonymous: true
    access_control:
        - { path: /login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /*, roles: ROLE_USER }
        # - { path: /.*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #login:
        #    pattern:  ^/demo/secured/login$
        #    security: false

        #secured_area:
        #    pattern:    ^/demo/secured/
        #    form_login:
        #        check_path: /demo/secured/login_check
        #        login_path: /demo/secured/login
        #    logout:
        #        path:   /demo/secured/logout
        #        target: /demo/
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    #access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
